<%- include('../partials/html.ejs') %>
<head>
  <%- include("../partials/title-meta.ejs", {title: "Resend Verification"}) %>
  <%- include('../partials/head-css.ejs') %>
</head>
<body>
  <div class="account-pages my-5 pt-5">
    <div class="container">
      <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
          <div class="card">
            <div class="card-body">
              <div class="text-center mb-4 mt-3">
                <a href="index.html" class="logo p-0 lh-base">
                  <span class="logo-dark"><img src="/admin/images/logo-dark.png" alt="" height="30"></span>
                  <span class="logo-light"><img src="/admin/images/logo-light.png" alt="" height="30"></span>
                </a>
              </div>
              <div class="text-center">
                <p class="text-muted w-75 mx-auto">
                  Enter your email address and verification code. You can also reset your password.
                </p>
              </div>
              <form action="/reset-password" method="post" class="p-2">
                <input type="hidden" name="token" value="<%= token %>">
                <div class="form-group mb-3">
                  <label for="otp">Reset Code (OTP)</label>
                  <input class="form-control" type="text" id="otp" name="code" placeholder="Enter verification code">
                </div>
                
                <div class="form-group mb-3">
                  <label for="password">Password</label>
                  <input class="form-control" type="password" id="password" name="password" placeholder="Enter password">
                </div>
                
                <div class="form-group mb-3">
                  <label for="confirmPass">Confirm Password</label>
                  <input class="form-control" type="password" id="confirmPass" name="confirmPass" placeholder="Enter Confirm password">
                </div>
                
                <div class="mb-3 text-center">
                  <button class="btn btn-primary w-100" type="submit">
                    Reset Password
                  </button>
                </div>
              </form>
            </div>
            <!-- end card-body -->
          </div>
          <!-- end card -->
          <div class="row mt-4">
            <div class="col-sm-12 text-center">
              <p class="text-muted mb-0">Back to <a href="/login" class="text-dark ms-1"><b>Sign In</b></a></p>
            </div>
          </div>
        </div>
        <!-- end col -->
      </div>
      <!-- end row -->
    </div>
    <!-- end container -->
  </div>
  <!-- end page -->
  <%- include('../partials/footer-scripts.ejs') %>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
  const passwordInput = document.getElementById('password');
  const confirmPassInput = document.getElementById('confirmPass');
  const submitButton = document.querySelector('button[type="submit"]');
  
  // Create feedback elements
  const passwordFeedback = document.createElement('div');
  passwordFeedback.className = 'password-feedback mt-2';
  passwordInput.parentNode.appendChild(passwordFeedback);
  
  const confirmFeedback = document.createElement('div');
  confirmFeedback.className = 'confirm-feedback mt-2';
  confirmPassInput.parentNode.appendChild(confirmFeedback);
  
  // Password requirements
  const minLength = 8;
  const requiresUppercase = true;
  const requiresLowercase = true;
  const requiresNumber = true;
  const requiresSpecial = true;
  
  // Validation functions
  function validatePassword() {
    const value = passwordInput.value;
    let isValid = true;
    let feedbackHtml = '';
    
    // Length check
    if (value.length < minLength) {
      isValid = false;
      feedbackHtml += `<div class="text-danger">Password must be at least ${minLength} characters</div>`;
    }
    
    // Uppercase check
    if (requiresUppercase && !/[A-Z]/.test(value)) {
      isValid = false;
      feedbackHtml += '<div class="text-danger">Password must contain at least one uppercase letter</div>';
    }
    
    // Lowercase check
    if (requiresLowercase && !/[a-z]/.test(value)) {
      isValid = false;
      feedbackHtml += '<div class="text-danger">Password must contain at least one lowercase letter</div>';
    }
    
    // Number check
    if (requiresNumber && !/\d/.test(value)) {
      isValid = false;
      feedbackHtml += '<div class="text-danger">Password must contain at least one number</div>';
    }
    
    // Special character check
    if (requiresSpecial && !/[!@#$%^&*(),.?":{}|<>]/.test(value)) {
      isValid = false;
      feedbackHtml += '<div class="text-danger">Password must contain at least one special character</div>';
    }
    
    // Update UI
    if (value.length > 0) {
      passwordFeedback.innerHTML = feedbackHtml;
      if (isValid) {
        passwordInput.classList.remove('is-invalid');
        passwordInput.classList.add('is-valid');
        passwordFeedback.innerHTML += '<div class="text-success">Password meets all requirements</div>';
      } else {
        passwordInput.classList.remove('is-valid');
        passwordInput.classList.add('is-invalid');
      }
    } else {
      passwordFeedback.innerHTML = '';
      passwordInput.classList.remove('is-valid', 'is-invalid');
    }
    
    validateConfirmPassword();
    updateSubmitButton();
    
    return isValid;
  }
  
  function validateConfirmPassword() {
    const passwordValue = passwordInput.value;
    const confirmValue = confirmPassInput.value;
    let isValid = false;
    
    if (confirmValue.length > 0) {
      if (passwordValue === confirmValue) {
        isValid = true;
        confirmPassInput.classList.remove('is-invalid');
        confirmPassInput.classList.add('is-valid');
        confirmFeedback.innerHTML = '<div class="text-success">Passwords match</div>';
      } else {
        confirmPassInput.classList.remove('is-valid');
        confirmPassInput.classList.add('is-invalid');
        confirmFeedback.innerHTML = '<div class="text-danger">Passwords do not match</div>';
      }
    } else {
      confirmFeedback.innerHTML = '';
      confirmPassInput.classList.remove('is-valid', 'is-invalid');
    }
    
    updateSubmitButton();
    
    return isValid;
  }
  
  function updateSubmitButton() {
    const passwordValid = passwordInput.classList.contains('is-valid');
    const confirmValid = confirmPassInput.classList.contains('is-valid');
    
    if (passwordValid && confirmValid) {
      submitButton.removeAttribute('disabled');
    } else {
      submitButton.setAttribute('disabled', 'disabled');
    }
  }
  
  // Add event listeners
  passwordInput.addEventListener('input', validatePassword);
  confirmPassInput.addEventListener('input', validateConfirmPassword);
  
  // Initialize button state
  submitButton.setAttribute('disabled', 'disabled');
});
  </script>
</body>
</html>