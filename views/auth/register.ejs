<!DOCTYPE html>
<html>
<head>
    <%- include('../partials/title-meta.ejs', {title: "Sign Up"}) %>
    <%- include('../partials/head-css.ejs') %>
</head>

<body>
    <div class="account-pages my-5 pt-5">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-md-8 col-lg-6">
                    <div class="card">
                        <div class="card-body">
                            <div class="text-center mb-4 mt-3">
                                <a href="index.html" class="logo p-0 lh-base">
                                    <span class="logo-dark"><img src="/admin/images/logo-dark.png" alt="" height="30"></span>
                                    <span class="logo-light"><img src="/admin/images/logo-light.png" alt="" height="30"></span>
                                </a>
                            </div>
                            <%- include('../partials/alert.ejs') %>
                            <form action="/register" method="post" class="p-2">
                                <div class="form-group">
                                    <label for="first_name">First Name</label>
                                    <input type="text" id="first_name" name="first_name" class="form-control" required placeholder="Enter your first name">
                                </div>
                                <div class="form-group">
                                    <label for="last_name">Last Name</label>
                                    <input type="text" id="last_name" name="last_name" class="form-control" required placeholder="Enter your last name">
                                </div>
                                <div class="form-group">
                                    <label for="email">Email address</label>
                                    <input type="email" id="email" name="email" class="form-control" required placeholder="Enter your email">
                                </div>
                                <div class="form-group">
                                    <label for="phone">Phone</label>
                                    <input type="tel" id="phone" name="phone" class="form-control" placeholder="Enter your phone number">
                                </div>
                                <div class="form-group">
                                    <label for="password">Password</label>
                                    <input type="password" id="password" name="password" class="form-control" required placeholder="Enter your password">
                                </div>
                                <div class="form-group">
                                    <label for="password_confirm">Confirm Password</label>
                                    <input type="password" id="password_confirm" name="password_confirm" class="form-control" required placeholder="Confirm your password">
                                </div>
                                <div class="form-group mb-4 pb-3">
                                    <div class="form-check">
                                        <input type="checkbox" class="form-check-input" id="terms" name="terms" required >
                                        <label class="form-check-label" for="terms">I accept <a href="#">Terms and Conditions</a></label>
                                    </div>                                                                  
                                </div>
                                <div class="mb-3 text-center">
                                    <button class="btn btn-primary btn-block w-100" type="submit"> Sign Up Free </button>
                                </div>
                            </form>
                        </div>
                        <!-- end card-body -->
                    </div>
                    <!-- end card -->
                    
                    <div class="row mt-4">
                        <div class="col-sm-12 text-center">
                            <p class="text-muted mb-0">Already have an account? <a href="/login" class="text-dark ms-1"><b>Sign In</b></a></p>
                        </div>
                    </div>
                </div>
                <!-- end col -->
            </div>
            <!-- end row -->
        </div>
        <!-- end container -->
    </div>

    <%- include('../partials/footer-scripts.ejs') %>

<script>
    document.addEventListener('DOMContentLoaded', function() {
    const form = document.querySelector('form[action="/register"]');
    const fields = [
        { 
            id: 'first_name', 
            validator: validateName, 
            errorMsg: 'First name must be at least 2 characters' 
        },
        { 
            id: 'last_name', 
            validator: validateName, 
            errorMsg: 'Last name must be at least 2 characters' 
        },
        { 
            id: 'email', 
            validator: validateEmail, 
            errorMsg: 'Please enter a valid email address' 
        },
        { 
            id: 'password', 
            validator: validatePassword, 
            errorMsg: 'Password must be 8+ chars, include number and special char' 
        },
        { 
            id: 'password_confirm', 
            validator: validatePasswordConfirm, 
            errorMsg: 'Passwords must match' 
        }
    ];

    // Track validation state for each field
    const fieldValidationState = {};

    // Add real-time validation to each field
    fields.forEach(field => {
        const inputField = document.getElementById(field.id);
        if (inputField) {
            inputField.addEventListener('input', function() {
                validateField(this, field.validator, field.errorMsg);
            });
        }
    });

    // Validation helper functions
    function validateName(value) {
        return value.trim().length >= 2;
    }

    function validateEmail(email) {
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        return emailRegex.test(email);
    }

    function validatePassword(password) {
        return password.length >= 8 && 
               /\d/.test(password) && 
               /[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]+/.test(password);
    }

    function validatePasswordConfirm(confirmPassword) {
        const password = document.getElementById('password').value;
        return confirmPassword === password;
    }

    function validateTerms() {
        const termsCheckbox = document.getElementById('terms');
        return termsCheckbox.checked;
    }

    // Field validation function
    function validateField(field, validatorFn, errorMsg) {
        // Remove existing error indicators
        const existingError = field.parentNode.querySelector('.real-time-error');
        if (existingError) {
            existingError.remove();
        }

        let isValid = true;
        // Validate the field
        if (!field.value || !validatorFn(field.value)) {
            // Create error indicator
            const errorIndicator = document.createElement('div');
            errorIndicator.textContent = errorMsg;
            errorIndicator.className = 'real-time-error text-danger small mt-1';
            
            // Add error styling
            field.classList.add('is-invalid');
            field.parentNode.appendChild(errorIndicator);
            
            isValid = false;
        } else {
            // Remove error styling
            field.classList.remove('is-invalid');
        }

        // Update validation state
        fieldValidationState[field.id] = isValid;

        // Check overall form validity
        updateFormSubmitState();
    }

    // Disable/enable form submit based on validation
    function updateFormSubmitState() {
        const submitButton = form.querySelector('button[type="submit"]');
        
        // Check all fields
        const allFieldsValid = fields.every(field => {
            const inputField = document.getElementById(field.id);
            return inputField.value && fieldValidationState[field.id] !== false;
        });

        // Check terms checkbox
        const termsChecked = validateTerms();

        // Enable/disable submit button
        if (allFieldsValid && termsChecked) {
            submitButton.disabled = false;
            submitButton.classList.remove('btn-secondary');
            submitButton.classList.add('btn-primary');
        } else {
            submitButton.disabled = true;
            submitButton.classList.remove('btn-primary');
            submitButton.classList.add('btn-secondary');
        }
    }

    // Initial disable of submit button
    const submitButton = form.querySelector('button[type="submit"]');
    submitButton.disabled = true;
    submitButton.classList.remove('btn-primary');
    submitButton.classList.add('btn-secondary');

    // Add validation to terms checkbox
    const termsCheckbox = document.getElementById('terms');
    termsCheckbox.addEventListener('change', function() {
        updateFormSubmitState();
    });
});
</script>
</body>
</html>