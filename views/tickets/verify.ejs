<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %> | Event Management System</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css">
  <link rel="stylesheet" href="/css/style.css">
</head>
<body class="bg-light">
  <%- include('../partials/header') %>
  
  <div class="container-fluid">
    <div class="row">
      <%- include('../partials/sidebar') %>
      
      <div class="col-lg-10 col-md-12 px-4 py-4">
        <!-- Alert messages -->
        <% if(success_msg != '') { %>
          <div class="alert alert-success alert-dismissible fade show" role="alert">
            <%= success_msg %>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
          </div>
        <% } %>
        
        <% if(error_msg != '') { %>
          <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <%= error_msg %>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
          </div>
        <% } %>
        
        <div class="d-flex justify-content-between align-items-center mb-4">
          <h1 class="h3 mb-0">Verify Tickets</h1>
        </div>
        
        <div class="row">
          <div class="col-lg-6">
            <div class="card mb-4">
              <div class="card-header">
                <h5 class="mb-0">Scan QR Code</h5>
              </div>
              <div class="card-body">
                <div class="text-center mb-3">
                  <button id="startScanBtn" class="btn btn-primary mb-3">
                    <i class="bi bi-camera-fill me-2"></i> Start Camera
                  </button>
                </div>
                
                <div class="scan-area d-none" id="scanArea">
                  <video id="qrScanner" autoplay></video>
                  <div class="scan-overlay"></div>
                  <div class="scan-line"></div>
                </div>
                
                <div class="alert alert-info mt-3">
                  <i class="bi bi-info-circle-fill me-2"></i> Position the QR code in the center of the camera view to scan.
                </div>
              </div>
            </div>
            
            <div class="card">
              <div class="card-header">
                <h5 class="mb-0">Manual Verification</h5>
              </div>
              <div class="card-body">
                <form id="manualVerifyForm">
                  <div class="mb-3">
                    <label for="ticketCode" class="form-label">Ticket Code</label>
                    <div class="input-group">
                      <input type="text" id="ticketCode" name="ticketCode" class="form-control" placeholder="Enter ticket code" required>
                      <button type="submit" class="btn btn-primary">
                        <i class="bi bi-search me-2"></i> Verify
                      </button>
                    </div>
                  </div>
                </form>
              </div>
            </div>
          </div>
          
          <div class="col-lg-6">
            <div class="card">
              <div class="card-header">
                <h5 class="mb-0">Ticket Information</h5>
              </div>
              <div class="card-body" id="ticketInfoContainer">
                <div class="text-center py-5" id="placeholderContent">
                  <i class="bi bi-ticket-perforated text-muted" style="font-size: 5rem;"></i>
                  <p class="mt-3 text-muted">Scan a ticket QR code or enter a ticket code to see details</p>
                </div>
                
                <div id="ticketDetails" class="d-none">
                  <!-- Ticket details will be populated here -->
                </div>
                
                <div id="ticketError" class="alert alert-danger d-none">
                  <!-- Error message will be shown here -->
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <%- include('../partials/footer') %>
  
  <!-- Check-in Confirmation Modal -->
  <div class="modal fade" id="checkInModal" tabindex="-1" aria-labelledby="checkInModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="checkInModalLabel">Confirm Check-in</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <p>Are you sure you want to check in this ticket?</p>
          <div class="mb-3">
            <label for="attendeePhoto" class="form-label">Attendee Photo (Optional)</label>
            <input class="form-control" type="file" id="attendeePhoto" accept="image/*" capture="user">
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="button" class="btn btn-primary" id="confirmCheckInBtn">
            <i class="bi bi-check-circle me-2"></i> Confirm Check-in
          </button>
        </div>
      </div>
    </div>
  </div>
  
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/jsqr@1.4.0/dist/jsQR.min.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Elements
      const startScanBtn = document.getElementById('startScanBtn');
      const scanArea = document.getElementById('scanArea');
      const video = document.getElementById('qrScanner');
      const manualVerifyForm = document.getElementById('manualVerifyForm');
      const ticketCodeInput = document.getElementById('ticketCode');
      const ticketDetails = document.getElementById('ticketDetails');
      const ticketError = document.getElementById('ticketError');
      const placeholderContent = document.getElementById('placeholderContent');
      const checkInModal = new bootstrap.Modal(document.getElementById('checkInModal'));
      const confirmCheckInBtn = document.getElementById('confirmCheckInBtn');
      const attendeePhotoInput = document.getElementById('attendeePhoto');
      
      let currentTicketCode = null;
      let stream = null;
      let scanning = false;
      
      // Start camera for QR scanning
      startScanBtn.addEventListener('click', async () => {
        try {
          if (!scanning) {
            stream = await navigator.mediaDevices.getUserMedia({ 
              video: { facingMode: "environment" }
            });
            video.srcObject = stream;
            
            scanArea.classList.remove('d-none');
            startScanBtn.innerHTML = '<i class="bi bi-camera-video-off me-2"></i> Stop Camera';
            
            scanning = true;
            scanQRCode();
          } else {
            stopCamera();
          }
        } catch (error) {
          console.error('Error accessing camera:', error);
          alert('Could not access the camera. Please make sure you\'ve granted camera permissions.');
        }
      });
      
      // Stop camera function
      function stopCamera() {
        if (stream) {
          stream.getTracks().forEach(track => track.stop());
          video.srcObject = null;
        }
        
        scanArea.classList.add('d-none');
        startScanBtn.innerHTML = '<i class="bi bi-camera-fill me-2"></i> Start Camera';
        scanning = false;
      }
      
      // Scan QR code from video
      function scanQRCode() {
        if (!scanning) return;
        
        const canvas = document.createElement('canvas');
        const ctx = canvas.getContext('2d');
        
        if (video.readyState === video.HAVE_ENOUGH_DATA) {
          canvas.width = video.videoWidth;
          canvas.height = video.videoHeight;
          ctx.drawImage(video, 0, 0, canvas.width, canvas.height);
          
          const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
          const code = jsQR(imageData.data, imageData.width, imageData.height, {
            inversionAttempts: "dontInvert",
          });
          
          if (code) {
            // Attempt to parse the QR code data
            try {
              let ticketData;
              
              // Check if the QR code contains JSON data
              try {
                ticketData = JSON.parse(code.data);
              } catch (e) {
                // If not JSON, assume it's a plain ticket code
                ticketData = { code: code.data };
              }
              
              // Extract ticket code (either from JSON or plain text)
              const ticketCode = ticketData.code;
              
              if (ticketCode) {
                // Update the input field with the scanned code
                ticketCodeInput.value = ticketCode;
                
                // Verify the ticket
                verifyTicket(ticketCode);
                
                // Stop scanning after successful scan
                stopCamera();
              }
            } catch (error) {
              console.error('Error parsing QR code:', error);
            }
          }
        }
        
        // Continue scanning
        requestAnimationFrame(scanQRCode);
      }
      
      // Manual ticket verification form
      manualVerifyForm.addEventListener('submit', (e) => {
        e.preventDefault();
        const ticketCode = ticketCodeInput.value.trim();
        
        if (ticketCode) {
          verifyTicket(ticketCode);
        }
      });
      
      // Verify ticket function
      async function verifyTicket(code) {
        try {
          // Show loading state
          placeholderContent.innerHTML = `
            <div class="spinner-border text-primary" role="status">
              <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-3 text-muted">Verifying ticket...</p>
          `;
          placeholderContent.classList.remove('d-none');
          ticketDetails.classList.add('d-none');
          ticketError.classList.add('d-none');
          
          // Make API call to verify ticket
          const response = await fetch(`/tickets/api/${code}/verify`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            }
          });
          
          const result = await response.json();
          
          if (response.ok && result.status === 'success') {
            // Ticket is valid
            displayTicketDetails(result.data.ticket);
            
            // Save current ticket code for check-in
            currentTicketCode = code;
          } else {
            // Ticket is invalid or there was an error
            displayTicketError(result.message, result.data?.ticket, result.data?.reason);
          }
        } catch (error) {
          console.error('Error verifying ticket:', error);
          displayTicketError('Failed to verify ticket. Please try again.');
        }
      }
      
      // Display ticket details
      function displayTicketDetails(ticket) {
        placeholderContent.classList.add('d-none');
        ticketError.classList.add('d-none');
        ticketDetails.classList.remove('d-none');
        
        // Format ticket details HTML
        ticketDetails.innerHTML = `
          <div class="ticket-info">
            <div class="alert alert-success mb-3">
              <i class="bi bi-check-circle-fill me-2"></i> This ticket is valid
            </div>
            
            <div class="row mb-3">
              <div class="col-md-6">
                <div class="ticket-info-label">Ticket Code</div>
                <div class="fw-bold">${ticket.ticket_code}</div>
              </div>
              <div class="col-md-6">
                <div class="ticket-info-label">Type</div>
                <div>${ticket.TicketType.name}</div>
              </div>
            </div>
            
            <div class="row mb-3">
              <div class="col-md-6">
                <div class="ticket-info-label">Event</div>
                <div>${ticket.Event.title}</div>
              </div>
              <div class="col-md-6">
                <div class="ticket-info-label">Venue</div>
                <div>${ticket.Event.Venue.name}</div>
              </div>
            </div>
            
            <div class="row mb-3">
              <div class="col-md-6">
                <div class="ticket-info-label">Purchaser</div>
                <div>${ticket.purchaser_name}</div>
              </div>
              <div class="col-md-6">
                <div class="ticket-info-label">Contact</div>
                <div>${ticket.purchaser_phone}</div>
              </div>
            </div>
          </div>
          
          <button id="checkInBtn" class="btn btn-success w-100">
            <i class="bi bi-box-arrow-in-right me-2"></i> Check In Attendee
          </button>
        `;
        
        // Add check-in button event listener
        document.getElementById('checkInBtn').addEventListener('click', () => {
          checkInModal.show();
        });
      }
      
      // Display ticket error
      function displayTicketError(message, ticket, reason) {
        placeholderContent.classList.add('d-none');
        ticketDetails.classList.add('d-none');
        ticketError.classList.remove('d-none');
        
        // Customize error message based on reason
        let errorMessage = message;
        let additionalInfo = '';
        
        if (reason === 'event_not_started') {
          additionalInfo = 'The event has not started yet.';
        } else if (reason === 'event_ended') {
          additionalInfo = 'The event has already ended.';
        } else if (reason === 'ticket_cancelled') {
          additionalInfo = 'This ticket has been cancelled.';
        } else if (reason === 'payment_incomplete') {
          additionalInfo = 'Payment for this ticket is not completed.';
        } else if (reason === 'already_checked_in') {
          const checkedInDate = new Date(ticket.checked_in_at);
          additionalInfo = `This ticket was already checked in on ${checkedInDate.toLocaleDateString()} at ${checkedInDate.toLocaleTimeString()}.`;
        }
        
        ticketError.innerHTML = `
          <i class="bi bi-exclamation-triangle-fill me-2"></i>
          <strong>${errorMessage}</strong>
          ${additionalInfo ? `<p class="mb-0 mt-2">${additionalInfo}</p>` : ''}
          
          ${ticket ? `
            <hr>
            <div class="row">
              <div class="col-md-6">
                <div class="ticket-info-label">Ticket Code</div>
                <div class="fw-bold">${ticket.ticket_code}</div>
              </div>
              <div class="col-md-6">
                <div class="ticket-info-label">Event</div>
                <div>${ticket.Event.title}</div>
              </div>
            </div>
          ` : ''}
        `;
      }
      
      // Handle check-in confirmation
      confirmCheckInBtn.addEventListener('click', async () => {
        if (!currentTicketCode) return;
        
        try {
          // Create form data for the check-in request
          const formData = new FormData();
          
          // Add attendee photo if selected
          if (attendeePhotoInput.files.length > 0) {
            formData.append('attendee_photo', attendeePhotoInput.files[0]);
          }
          
          // Make API call to check in ticket
          const response = await fetch(`/tickets/api/${currentTicketCode}/checkin`, {
            method: 'POST',
            body: formData
          });
          
          const result = await response.json();
          
          if (response.ok && result.status === 'success') {
            // Hide modal
            checkInModal.hide();
            
            // Show success message
            ticketDetails.innerHTML = `
              <div class="alert alert-success">
                <i class="bi bi-check-circle-fill me-2"></i> Ticket successfully checked in!
              </div>
              <div class="text-center">
                <img src="/images/check-in-success.svg" alt="Success" style="max-width: 200px;">
                <h5 class="mt-3">Welcome to the event!</h5>
                <p class="text-muted">${result.data.ticket.purchaser_name}</p>
                <button class="btn btn-primary mt-3" onclick="window.location.reload()">
                  <i class="bi bi-arrow-repeat me-2"></i> Verify Another Ticket
                </button>
              </div>
            `;
            
            // Reset form
            attendeePhotoInput.value = '';
            ticketCodeInput.value = '';
            currentTicketCode = null;
          } else {
            // Show error message
            alert(`Check-in failed: ${result.message}`);
          }
        } catch (error) {
          console.error('Error checking in:', error);
          alert('Failed to check in ticket. Please try again.');
        }
      });
    });
  </script>
</body>
</html>