<!DOCTYPE html>
<html lang="en">
<head>
    <%- include('../partials/title-meta') %>
    <%- include('../partials/head-css') %>

    <style>
      /* Set minimum height for the table container */
      .user-table-container {
        min-height: 400px;
        position: relative;
      }

      /* Make table full width and control overflow */
      .user-table-container .table-responsive {
        overflow-x: visible;
        overflow-y: visible;
      }

      /* Style for the table */
      .user-table {
        width: 100%;
      }

      /* Ensure dropdown menus appear over other content */
      .dropdown-menu {
        position: absolute;
        z-index: 1000;
        padding: 0.5rem 0;
        margin: 0;
        min-width: 10rem;
      }

      /* Stats cards */
      .stats-card {
        border-radius: 0.5rem;
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        transition: transform 0.2s;
      }
      
      .stats-card:hover {
        transform: translateY(-5px);
      }
      
      .stats-icon {
        font-size: 2rem;
        opacity: 0.8;
      }
      
      /* Responsive table adjustments */
      @media (max-width: 992px) {
        .table-responsive {
          overflow-x: visible;
        }

        /* Stack the cells on small screens */
        .responsive-stack-table thead {
          display: none;
        }

        .responsive-stack-table tbody tr {
          display: block;
          border: 1px solid #dee2e6;
          margin-bottom: 1rem;
          border-radius: 0.25rem;
          padding: 0.5rem;
        }

        .responsive-stack-table tbody tr td {
          display: block;
          text-align: right;
          padding: 0.5rem;
          border: none;
          position: relative;
        }

        .responsive-stack-table tbody tr td:before {
          content: attr(data-label);
          float: left;
          font-weight: bold;
        }
      }
      
      /* Tabs styling */
      .nav-tabs .nav-link {
        border: none;
        border-bottom: 2px solid transparent;
        color: #6c757d;
        font-weight: 500;
      }
      
      .nav-tabs .nav-link.active {
        color: #0d6efd;
        border-bottom: 2px solid #0d6efd;
        background: transparent;
      }
      
      /* Badge pill for ticket count */
      .badge-ticket-count {
        border-radius: 50px;
        padding: 0.35em 0.65em;
        font-size: 0.75em;
      }
    </style>
</head>

<body>
    <!-- Begin page -->
    <div class="wrapper">
        <%- include('../partials/menu') %>
        
        <!-- ============================================================== -->
        <!-- Start Page Content here -->
        <!-- ============================================================== -->
        <div class="page-content">
            <div class="page-container">
                <!-- Page title -->
                <div class="row">
                    <div class="col-12">
                        <div class="page-title-box">
                            <div class="page-title-right">
                                <ol class="breadcrumb m-0">
                                    <li class="breadcrumb-item"><a href="/dashboard">Dashboard</a></li>
                                    <li class="breadcrumb-item"><a href="/events">Events</a></li>
                                    <li class="breadcrumb-item active">Attendees</li>
                                </ol>
                            </div>
                            <h4 class="page-title"><%= event.title %> - Attendees</h4>
                        </div>
                    </div>
                </div>

                <!-- Flash messages -->
                <%- include('../partials/messages') %>
                
                <!-- Event Summary Stats -->
                <div class="row mb-4">
                    <div class="col-lg-3 col-md-6 mb-3">
                        <div class="card stats-card bg-primary bg-opacity-10 h-100">
                            <div class="card-body">
                                <div class="d-flex justify-content-between">
                                    <div>
                                        <h5 class="text-primary mb-1">Total Attendees</h5>
                                        <h3 class="fw-bold"><%= summary.totalAttendees %></h3>
                                    </div>
                                    <div class="stats-icon text-primary">
                                        <i class="ti ti-ticket"></i>
                                    </div>
                                </div>
                                <p class="mb-0 text-muted small">Registered attendees for this event</p>
                            </div>
                        </div>
                    </div>
                    
                    <div class="col-lg-3 col-md-6 mb-3">
                        <div class="card stats-card bg-success bg-opacity-10 h-100">
                            <div class="card-body">
                                <div class="d-flex justify-content-between">
                                    <div>
                                        <h5 class="text-success mb-1">Revenue</h5>
                                        <h3 class="fw-bold">$<%= summary.totalRevenue.toFixed(2) %></h3>
                                    </div>
                                    <div class="stats-icon text-success">
                                        <i class="ti ti-currency-dollar"></i>
                                    </div>
                                </div>
                                <p class="mb-0 text-muted small">Total revenue from ticket sales</p>
                            </div>
                        </div>
                    </div>
                    
                    <div class="col-lg-3 col-md-6 mb-3">
                        <div class="card stats-card bg-warning bg-opacity-10 h-100">
                            <div class="card-body">
                                <div class="d-flex justify-content-between">
                                    <div>
                                        <h5 class="text-warning mb-1">Referrals</h5>
                                        <h3 class="fw-bold"><%= summary.totalReferrals %></h3>
                                    </div>
                                    <div class="stats-icon text-warning">
                                        <i class="ti ti-refresh-dot"></i>
                                    </div>
                                </div>
                                <p class="mb-0 text-muted small">Tickets purchased through referrals</p>
                            </div>
                        </div>
                    </div>
                    
                    <div class="col-lg-3 col-md-6 mb-3">
                        <div class="card stats-card bg-info bg-opacity-10 h-100">
                            <div class="card-body">
                                <div class="d-flex justify-content-between">
                                    <div>
                                        <h5 class="text-info mb-1">Commissions</h5>
                                        <h3 class="fw-bold">$<%= summary.totalCommissions.toFixed(2) %></h3>
                                    </div>
                                    <div class="stats-icon text-info">
                                        <i class="ti ti-percentage"></i>
                                    </div>
                                </div>
                                <p class="mb-0 text-muted small">Total commissions paid for referrals</p>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Filters and Search -->
                <div class="row mb-4">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-body">
                                <form id="attendeeSearchForm">
                                    <div class="row g-2">
                                        <div class="col-lg-3 col-md-6">
                                            <div class="input-group">
                                                <span class="input-group-text"><i class="ri-search-line"></i></span>
                                                <input type="text" class="form-control" id="searchName" placeholder="Search by name or email">
                                            </div>
                                        </div>
                                        <div class="col-lg-2 col-md-6">
                                            <select class="form-select" id="filterTicketType">
                                                <option value="">All Ticket Types</option>
                                                <% ticketTypeStats.forEach(stat => { %>
                                                    <option value="<%= stat.ticketTypeId %>"><%= stat.TicketType.name %></option>
                                                <% }); %>
                                            </select>
                                        </div>
                                        <div class="col-lg-2 col-md-6">
                                            <select class="form-select" id="filterReferral">
                                                <option value="">All Referrals</option>
                                                <option value="yes">With Referral</option>
                                                <option value="no">Without Referral</option>
                                            </select>
                                        </div>
                                        <div class="col-lg-2 col-md-6">
                                            <select class="form-select" id="sortBy">
                                                <option value="date_desc">Newest First</option>
                                                <option value="date_asc">Oldest First</option>
                                                <option value="name_asc">Name (A-Z)</option>
                                                <option value="name_desc">Name (Z-A)</option>
                                            </select>
                                        </div>
                                        <div class="col-lg-3 col-md-12">
                                            <div class="d-grid d-md-flex justify-content-md-end">
                                                <button type="button" class="btn btn-primary mb-2 me-md-2" onclick="filterAttendees()">
                                                    <i class="ri-search-line me-1"></i> Search
                                                </button>
                                                <button type="button" class="btn btn-secondary" onclick="resetFilters()">
                                                    <i class="ri-refresh-line me-1"></i> Reset
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Tabbed Content -->
                <div class="row">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-body p-0">
                                <!-- Tabs Nav -->
                                <ul class="nav nav-tabs nav-bordered" role="tablist">
                                    <li class="nav-item">
                                        <a class="nav-link active" data-bs-toggle="tab" href="#attendees-tab" role="tab">
                                            <i class="ti ti-ticket me-1"></i> Attendees
                                            <span class="badge bg-primary badge-ticket-count"><%= attendees.length %></span>
                                        </a>
                                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link" data-bs-toggle="tab" href="#referrals-tab" role="tab">
                                            <i class="ti ti-refresh-dot me-1"></i> Referrals
                                            <span class="badge bg-warning badge-ticket-count"><%= referralStats.length %></span>
                                        </a>
                                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link" data-bs-toggle="tab" href="#ticket-stats-tab" role="tab">
                                            <i class="ri-ticket-2-line me-1"></i> Ticket Stats
                                            <span class="badge bg-info badge-ticket-count"><%= ticketTypeStats.length %></span>
                                        </a>
                                    </li>
                                </ul>
                                
                                <!-- Tabs Content -->
                                <div class="tab-content p-3">
                                    <!-- Attendees Tab -->
                                    <div class="tab-pane active" id="attendees-tab" role="tabpanel">
                                        <div class="table-responsive">
                                            <table class="table table-centered table-hover mb-0 user-table responsive-stack-table">
                                                <thead>
                                                    <tr>
                                                        <th>Attendee</th>
                                                        <th>Email</th>
                                                        <th>Ticket Type</th>
                                                        <th>Purchase Date</th>
                                                        <th>Price</th>
                                                        <th>Referred By</th>
                                                        <th>Actions</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <% if (attendees && attendees.length > 0) { %>
                                                        <% attendees.forEach(ticket => { %>
                                                            <tr>
                                                                <td data-label="Attendee">
                                                                    <div class="d-flex align-items-center">
                                                                        <% if (ticket.attendee.profileImage) { %>
                                                                            <img src="<%= ticket.attendee.profileImage %>" class="rounded-circle me-2" width="32" height="32" alt="Profile">
                                                                        <% } else { %>
                                                                            <div class="avatar me-2 bg-primary text-white rounded-circle">
                                                                                <%= ticket.attendee.name.charAt(0).toUpperCase() %>
                                                                            </div>
                                                                        <% } %>
                                                                        <div>
                                                                            <h6 class="mb-0"><%= ticket.attendee.name %></h6>
                                                                            <small class="text-muted">
                                                                                <% if (ticket.isCheckedIn) { %>
                                                                                    <span class="badge bg-success"><i class="ri-check-line"></i> Checked In</span>
                                                                                <% } else { %>
                                                                                    <span class="badge bg-secondary">Not Checked In</span>
                                                                                <% } %>
                                                                            </small>
                                                                        </div>
                                                                    </div>
                                                                </td>
                                                                <td data-label="Email">
                                                                    <a href="mailto:<%= ticket.attendee.email %>"><%= ticket.attendee.email %></a>
                                                                </td>
                                                                <td data-label="Ticket Type">
                                                                    <% 
                                                                        let typeBadgeClass = "badge bg-info";
                                                                        if (ticket.TicketType.type === 'vip') {
                                                                            typeBadgeClass = "badge bg-danger";
                                                                        } else if (ticket.TicketType.type === 'premium') {
                                                                            typeBadgeClass = "badge bg-warning";
                                                                        } else if (ticket.TicketType.type === 'early_bird') {
                                                                            typeBadgeClass = "badge bg-success";
                                                                        }
                                                                    %>
                                                                    <span class="<%= typeBadgeClass %>"><%= ticket.TicketType.name %></span>
                                                                </td>
                                                                <td data-label="Purchase Date">
                                                                    <%= new Date(ticket.purchaseDate).toLocaleDateString() %>
                                                                </td>
                                                                <td data-label="Price">
                                                                    $<%= parseFloat(ticket.finalPrice).toFixed(2) %>
                                                                </td>
                                                                <td data-label="Referred By">
                                                                    <% if (ticket.referrer) { %>
                                                                        <a href="/users/profile/<%= ticket.referrerId %>" class="text-info">
                                                                            <%= ticket.referrer.name %>
                                                                        </a>
                                                                    <% } else { %>
                                                                        <span class="text-muted">-</span>
                                                                    <% } %>
                                                                </td>
                                                                <td data-label="Actions">
                                                                    <div class="dropdown">
                                                                        <button class="btn btn-sm btn-light dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                                                            Actions
                                                                        </button>
                                                                        <ul class="dropdown-menu">
                                                                            <li>
                                                                                <a class="dropdown-item" href="/tickets/<%= ticket.id %>">
                                                                                    <i class="ri-ticket-2-line me-1"></i> View Ticket
                                                                                </a>
                                                                            </li>
                                                                            <li>
                                                                                <a class="dropdown-item" href="/users/profile/<%= ticket.userId %>">
                                                                                    <i class="ti ti-ticket me-1"></i> View Attendee
                                                                                </a>
                                                                            </li>
                                                                            <% if (!ticket.isCheckedIn) { %>
                                                                                <li>
                                                                                    <a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#checkInModal<%= ticket.id %>">
                                                                                        <i class="ri-check-double-line me-1"></i> Check In
                                                                                    </a>
                                                                                </li>
                                                                            <% } %>
                                                                            <li>
                                                                                <a class="dropdown-item" href="#" onclick="printTicket('<%= ticket.id %>')">
                                                                                    <i class="ri-printer-line me-1"></i> Print Ticket
                                                                                </a>
                                                                            </li>
                                                                        </ul>
                                                                    </div>
                                                                    
                                                                    <!-- Check-in Modal -->
                                                                    <% if (!ticket.isCheckedIn) { %>
                                                                        <div class="modal fade" id="checkInModal<%= ticket.id %>" tabindex="-1" aria-hidden="true">
                                                                            <div class="modal-dialog">
                                                                                <div class="modal-content">
                                                                                    <form action="/events/<%= event.id %>/attendees/<%= ticket.id %>/check-in" method="POST">
                                                                                        <div class="modal-header">
                                                                                            <h5 class="modal-title">Check In: <%= ticket.attendee.name %></h5>
                                                                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                                                        </div>
                                                                                        <div class="modal-body">
                                                                                            <div class="alert alert-info">
                                                                                                <i class="ri-information-line me-2"></i>
                                                                                                You are about to check in this attendee for the event.
                                                                                            </div>
                                                                                            <div class="mb-3">
                                                                                                <label class="form-label">Ticket Number</label>
                                                                                                <input type="text" class="form-control" value="<%= ticket.ticketNumber %>" readonly>
                                                                                            </div>
                                                                                            <div class="mb-3">
                                                                                                <label class="form-label">Ticket Type</label>
                                                                                                <input type="text" class="form-control" value="<%= ticket.TicketType.name %>" readonly>
                                                                                            </div>
                                                                                            <div class="mb-3">
                                                                                                <label class="form-label">Notes (Optional)</label>
                                                                                                <textarea class="form-control" name="notes" rows="2" placeholder="Add any check-in notes here..."></textarea>
                                                                                            </div>
                                                                                        </div>
                                                                                        <div class="modal-footer">
                                                                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                                                                            <button type="submit" class="btn btn-success">
                                                                                                <i class="ri-check-line me-1"></i> Confirm Check-In
                                                                                            </button>
                                                                                        </div>
                                                                                    </form>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    <% } %>
                                                                </td>
                                                            </tr>
                                                        <% }); %>
                                                    <% } else { %>
                                                        <tr class="no-attendees-row">
                                                            <td colspan="7" class="text-center py-5">
                                                                <div class="py-4">
                                                                    <i class="ri-user-search-line" style="font-size: 48px; opacity: 0.5;"></i>
                                                                    <h5 class="mt-3">No Attendees Found</h5>
                                                                    <p class="text-muted">There are no attendees registered for this event yet.</p>
                                                                </div>
                                                            </td>
                                                        </tr>
                                                    <% } %>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                    
                                    <!-- Referrals Tab -->
                                    <div class="tab-pane" id="referrals-tab" role="tabpanel">
                                        <div class="table-responsive">
                                            <table class="table table-centered table-hover mb-0">
                                                <thead>
                                                    <tr>
                                                        <th>Referrer</th>
                                                        <th>Email</th>
                                                        <th>Referral Code</th>
                                                        <th>Referrals Count</th>
                                                        <th>Commission Earned</th>
                                                        <th>Actions</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <% if (referralStats && referralStats.length > 0) { %>
                                                        <% referralStats.forEach(stat => { %>
                                                            <tr>
                                                                <td>
                                                                    <div class="d-flex align-items-center">
                                                                        <div class="avatar bg-warning text-white rounded-circle me-2">
                                                                            <%= stat.referrer.name.charAt(0).toUpperCase() %>
                                                                        </div>
                                                                        <h6 class="mb-0"><%= stat.referrer.name %></h6>
                                                                    </div>
                                                                </td>
                                                                <td>
                                                                    <a href="mailto:<%= stat.referrer.email %>"><%= stat.referrer.email %></a>
                                                                </td>
                                                                <td>
                                                                    <code><%= stat.referrer.referralCode %></code>
                                                                </td>
                                                                <td>
                                                                    <span class="badge bg-primary badge-pill"><%= stat.dataValues.referralCount %></span>
                                                                </td>
                                                                <td>
                                                                    <span class="text-success">$<%= parseFloat(stat.dataValues.totalCommission || 0).toFixed(2) %></span>
                                                                </td>
                                                                <td>
                                                                    <a href="/users/profile/<%= stat.referrerId %>" class="btn btn-sm btn-light">
                                                                        <i class="ri-user-line me-1"></i> View Profile
                                                                    </a>
                                                                </td>
                                                            </tr>
                                                        <% }); %>
                                                    <% } else { %>
                                                        <tr>
                                                            <td colspan="6" class="text-center py-5">
                                                                <div class="py-4">
                                                                    <i class="ti ti-refresh-dot" style="font-size: 48px; opacity: 0.5;"></i>
                                                                    <h5 class="mt-3">No Referrals Found</h5>
                                                                    <p class="text-muted">There are no completed referrals for this event yet.</p>
                                                                </div>
                                                            </td>
                                                        </tr>
                                                    <% } %>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                    
                                    <!-- Ticket Stats Tab -->
                                    <div class="tab-pane" id="ticket-stats-tab" role="tabpanel">
                                        <div class="table-responsive">
                                            <table class="table table-centered table-hover mb-0">
                                                <thead>
                                                    <tr>
                                                        <th>Ticket Type</th>
                                                        <th>Category</th>
                                                        <th>Price</th>
                                                        <th>Tickets Sold</th>
                                                        <th>Revenue</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <% if (ticketTypeStats && ticketTypeStats.length > 0) { %>
                                                        <% ticketTypeStats.forEach(stat => { %>
                                                            <tr>
                                                                <td>
                                                                    <h6 class="mb-0"><%= stat.TicketType.name %></h6>
                                                                </td>
                                                                <td>
                                                                    <% 
                                                                        let typeBadgeClass = "badge bg-info";
                                                                        if (stat.TicketType.type === 'vip') {
                                                                            typeBadgeClass = "badge bg-danger";
                                                                        } else if (stat.TicketType.type === 'premium') {
                                                                            typeBadgeClass = "badge bg-warning";
                                                                        } else if (stat.TicketType.type === 'early_bird') {
                                                                            typeBadgeClass = "badge bg-success";
                                                                        }
                                                                    %>
                                                                    <span class="<%= typeBadgeClass %>"><%= stat.TicketType.type.replace('_', ' ').toUpperCase() %></span>
                                                                </td>
                                                                <td>
                                                                    $<%= parseFloat(stat.TicketType.price).toFixed(2) %>
                                                                </td>
                                                                <td>
                                                                    <span class="badge bg-primary badge-pill"><%= stat.dataValues.ticketCount %></span>
                                                                </td>
                                                                <td>
                                                                    <span class="text-success">$<%= parseFloat(stat.dataValues.totalRevenue || 0).toFixed(2) %></span>
                                                                </td>
                                                            </tr>
                                                        <% }); %>
                                                    <% } else { %>
                                                        <tr>
                                                            <td colspan="5" class="text-center py-5">
                                                                <div class="py-4">
                                                                    <i class="ri-ticket-2-line" style="font-size: 48px; opacity: 0.5;"></i>
                                                                    <h5 class="mt-3">No Ticket Data</h5>
                                                                    <p class="text-muted">There is no ticket sales data available for this event.</p>
                                                                </div>
                                                            </td>
                                                        </tr>
                                                    <% } %>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Export options -->
                <div class="row mt-4 mb-4">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">Export Data</h5>
                                <p class="text-muted">Download attendee data for your records or analysis.</p>
                                <div class="btn-group">
                                    <button type="button" class="btn btn-primary m-2" onclick="exportToCsv()">
                                        <i class="ri-file-excel-2-line me-1"></i> Export to CSV
                                    </button>
                                    <button type="button" class="btn btn-info m-2" onclick="exportToPdf()">
                                        <i class="ri-file-pdf-line me-1"></i> Export to PDF
                                    </button>
                                    <button type="button" class="btn btn-success m-2" onclick="printAttendeeList()">
                                        <i class="ri-printer-line me-1"></i> Print List
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            <!-- container -->
            <%- include('../partials/footer') %>
        </div>
        <!-- ============================================================== -->
        <!-- End Page content -->
        <!-- ============================================================== -->
    </div>
    <!-- END wrapper -->


    <script>
        // Enhanced attendee management script
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize state
            const state = {
                currentPage: 1,
                rowsPerPage: 10,
                filteredRows: [],
                filters: {
                    searchTerm: '',
                    ticketType: '',
                    referral: '',
                    sortBy: 'date_desc'
                }
            };
        
            // Load saved filters
            initializeFilters();
            
            // Set up pagination
            setupPagination();
            
            // Initial filtering
            filterAttendees();
            
            // Add event listeners
            addEventListeners();
            
            // Initialize filters from localStorage
            function initializeFilters() {
                const savedFilters = JSON.parse(localStorage.getItem('eventAttendeesFilters') || '{}');
                
                if (savedFilters.searchName) {
                    document.getElementById('searchName').value = savedFilters.searchName;
                    state.filters.searchTerm = savedFilters.searchName.toLowerCase();
                }
                
                if (savedFilters.filterTicketType) {
                    document.getElementById('filterTicketType').value = savedFilters.filterTicketType;
                    state.filters.ticketType = savedFilters.filterTicketType;
                }
                
                if (savedFilters.filterReferral) {
                    document.getElementById('filterReferral').value = savedFilters.filterReferral;
                    state.filters.referral = savedFilters.filterReferral;
                }
                
                if (savedFilters.sortBy) {
                    document.getElementById('sortBy').value = savedFilters.sortBy;
                    state.filters.sortBy = savedFilters.sortBy;
                }
                
                if (savedFilters.rowsPerPage) {
                    state.rowsPerPage = parseInt(savedFilters.rowsPerPage);
                }
            }
            
            // Add all event listeners
            function addEventListeners() {
                // Search on Enter key
                document.getElementById('searchName').addEventListener('keypress', function(e) {
                    if (e.key === 'Enter') {
                        e.preventDefault();
                        filterAttendees();
                    }
                });
                
                // Filter controls
                document.getElementById('filterTicketType').addEventListener('change', filterAttendees);
                document.getElementById('filterReferral').addEventListener('change', filterAttendees);
                document.getElementById('sortBy').addEventListener('change', filterAttendees);
                
                // Search button
                document.querySelector('button[onclick="filterAttendees()"]').addEventListener('click', filterAttendees);
                
                // Reset button
                document.querySelector('button[onclick="resetFilters()"]').addEventListener('click', resetFilters);
                
                // Page size selector
                const pageSizeSelector = document.getElementById('pageSizeSelector');
                if (pageSizeSelector) {
                    pageSizeSelector.addEventListener('change', changePageSize);
                }
                
                // Tab change event to refresh table display
                const tabLinks = document.querySelectorAll('a[data-bs-toggle="tab"]');
                tabLinks.forEach(link => {
                    link.addEventListener('shown.bs.tab', function() {
                        const tabId = this.getAttribute('href');
                        if (tabId === '#attendees-tab') {
                            filterAttendees();
                        }
                    });
                });
            }
            
            // Set up pagination controls
            function setupPagination() {
                const tableContainer = document.querySelector('#attendees-tab .table-responsive');
                if (!tableContainer || document.getElementById('paginationControls')) return;
                
                const paginationDiv = document.createElement('div');
                paginationDiv.id = 'paginationControls';
                paginationDiv.className = 'd-flex justify-content-between align-items-center mt-3 flex-wrap';
                
                paginationDiv.innerHTML = `
                    <div id="pageInfo" class="text-muted mb-2 mb-sm-0">
                        Showing 0 to 0 of 0 attendees
                    </div>
                
                    <div class="d-flex align-items-center flex-wrap">
                        <div class="btn-group me-2 mb-2 mb-sm-0">
                            <button class="btn btn-sm btn-outline-primary" id="firstPage" title="First Page">
                                <i class="ri-skip-back-line"></i>
                            </button>
                            <button class="btn btn-sm btn-outline-primary" id="prevPage" title="Previous Page">
                                <i class="ri-arrow-left-s-line"></i>
                            </button>
                            <button class="btn btn-sm btn-outline-primary disabled" id="pageIndicator">
                                Page 1
                            </button>
                            <button class="btn btn-sm btn-outline-primary" id="nextPage" title="Next Page">
                                <i class="ri-arrow-right-s-line"></i>
                            </button>
                            <button class="btn btn-sm btn-outline-primary" id="lastPage" title="Last Page">
                                <i class="ri-skip-forward-line"></i>
                            </button>
                        </div>
                    
                        <div>
                            <select class="form-select form-select-sm" id="pageSizeSelector">
                                <option value="10">10 per page</option>
                                <option value="25">25 per page</option>
                                <option value="50">50 per page</option>
                                <option value="100">100 per page</option>
                            </select>
                        </div>
                    </div>
                `;
                
                tableContainer.insertAdjacentElement('afterend', paginationDiv);
                
                // Add pagination event listeners
                document.getElementById('firstPage').addEventListener('click', () => goToPage(1));
                document.getElementById('prevPage').addEventListener('click', () => goToPage(state.currentPage - 1));
                document.getElementById('nextPage').addEventListener('click', () => goToPage(state.currentPage + 1));
                document.getElementById('lastPage').addEventListener('click', () => {
                    const totalPages = Math.ceil(state.filteredRows.length / state.rowsPerPage);
                    goToPage(totalPages);
                });
                
                // Set initial page size
                const pageSizeSelector = document.getElementById('pageSizeSelector');
                if (pageSizeSelector) {
                    pageSizeSelector.value = state.rowsPerPage.toString();
                }
            }
            
            // Filter attendees based on criteria
            function filterAttendees() {
                // Update filters from form
                state.filters.searchTerm = document.getElementById('searchName').value.toLowerCase();
                state.filters.ticketType = document.getElementById('filterTicketType').value;
                state.filters.referral = document.getElementById('filterReferral').value;
                state.filters.sortBy = document.getElementById('sortBy').value;
                
                // Save to localStorage
                saveFilters();
                
                // Get all attendee rows except the "no attendees" placeholder
                const attendeeRows = Array.from(document.querySelectorAll('#attendees-tab table tbody tr')).filter(
                    row => !row.classList.contains('no-attendees-row')
                );
                
                // Apply filters
                state.filteredRows = attendeeRows.filter(row => {
                    // Get cell data for filtering
                    const attendeeCell = row.querySelector('td[data-label="Attendee"]');
                    const emailCell = row.querySelector('td[data-label="Email"]');
                    const ticketTypeCell = row.querySelector('td[data-label="Ticket Type"] span');
                    const referrerCell = row.querySelector('td[data-label="Referred By"]');
                    
                    if (!attendeeCell || !emailCell || !ticketTypeCell || !referrerCell) return false;
                    
                    const name = attendeeCell.textContent.toLowerCase();
                    const email = emailCell.textContent.toLowerCase();
                    const ticketTypeId = row.getAttribute('data-ticket-type-id') || '';
                    const hasReferrer = referrerCell.textContent.trim() !== '-';
                    
                    // Apply search term filter
                    const matchesSearch = state.filters.searchTerm === '' || 
                                        name.includes(state.filters.searchTerm) || 
                                        email.includes(state.filters.searchTerm);
                    
                    // Apply ticket type filter
                    const matchesTicketType = state.filters.ticketType === '' || 
                                            ticketTypeId === state.filters.ticketType;
                    
                    // Apply referral filter
                    const matchesReferral = state.filters.referral === '' || 
                                         (state.filters.referral === 'yes' && hasReferrer) || 
                                         (state.filters.referral === 'no' && !hasReferrer);
                    
                    return matchesSearch && matchesTicketType && matchesReferral;
                });
                
                // Apply sorting
                sortFilteredRows();
                
                // Reset to first page
                state.currentPage = 1;
                
                // Update UI
                updateEmptyState();
                updatePaginationUI();
                displayCurrentPage();
            }
            
            // Sort the filtered rows based on selected criteria
            function sortFilteredRows() {
                const sortBy = state.filters.sortBy;
                
                state.filteredRows.sort((a, b) => {
                    if (sortBy === 'date_desc' || sortBy === 'date_asc') {
                        const dateA = new Date(a.querySelector('td[data-label="Purchase Date"]').textContent);
                        const dateB = new Date(b.querySelector('td[data-label="Purchase Date"]').textContent);
                        
                        return sortBy === 'date_desc' ? dateB - dateA : dateA - dateB;
                    } else if (sortBy === 'name_asc' || sortBy === 'name_desc') {
                        const nameA = a.querySelector('td[data-label="Attendee"]').textContent.toLowerCase();
                        const nameB = b.querySelector('td[data-label="Attendee"]').textContent.toLowerCase();
                        
                        return sortBy === 'name_asc' 
                            ? nameA.localeCompare(nameB) 
                            : nameB.localeCompare(nameA);
                    }
                    
                    return 0;
                });
            }
            
            // Reset all filters
            function resetFilters() {
                document.getElementById('searchName').value = '';
                document.getElementById('filterTicketType').value = '';
                document.getElementById('filterReferral').value = '';
                document.getElementById('sortBy').value = 'date_desc';
                
                // Clear state
                state.filters = {
                    searchTerm: '',
                    ticketType: '',
                    referral: '',
                    sortBy: 'date_desc'
                };
                
                // Remove from localStorage
                localStorage.removeItem('eventAttendeesFilters');
                
                // Reset to first page
                state.currentPage = 1;
                
                // Re-apply filters
                filterAttendees();
            }
            
            // Save current filters to localStorage
            function saveFilters() {
                const filters = {
                    searchName: document.getElementById('searchName').value,
                    filterTicketType: document.getElementById('filterTicketType').value,
                    filterReferral: document.getElementById('filterReferral').value,
                    sortBy: document.getElementById('sortBy').value,
                    rowsPerPage: state.rowsPerPage
                };
                
                localStorage.setItem('eventAttendeesFilters', JSON.stringify(filters));
            }
            
            // Show/hide empty state message
            function updateEmptyState() {
                const tbody = document.querySelector('#attendees-tab table tbody');
                if (!tbody) return;
                
                let noAttendeesRow = document.querySelector('.no-attendees-row');
                
                // If no filtered rows, show empty state
                if (state.filteredRows.length === 0) {
                    if (!noAttendeesRow) {
                        noAttendeesRow = document.createElement('tr');
                        noAttendeesRow.className = 'no-attendees-row';
                        noAttendeesRow.innerHTML = `
                            <td colspan="7" class="text-center py-5">
                                <div class="py-4">
                                    <i class="ri-filter-line" style="font-size: 48px; opacity: 0.5;"></i>
                                    <h5 class="mt-3">No Matching Attendees</h5>
                                    <p class="text-muted">No attendees match your filter criteria. Try adjusting your filters.</p>
                                </div>
                            </td>
                        `;
                        tbody.appendChild(noAttendeesRow);
                    } else {
                        noAttendeesRow.style.display = '';
                    }
                } else if (noAttendeesRow) {
                    noAttendeesRow.style.display = 'none';
                }
            }
            
            // Update pagination controls
            function updatePaginationUI() {
                const totalRows = state.filteredRows.length;
                const totalPages = Math.max(1, Math.ceil(totalRows / state.rowsPerPage));
                
                // Update page info text
                const pageInfo = document.getElementById('pageInfo');
                if (pageInfo) {
                    const startItem = totalRows > 0 ? (state.currentPage - 1) * state.rowsPerPage + 1 : 0;
                    const endItem = Math.min(state.currentPage * state.rowsPerPage, totalRows);
                    pageInfo.textContent = `Showing ${startItem} to ${endItem} of ${totalRows} attendees`;
                }
                
                // Update page indicator
                const pageIndicator = document.getElementById('pageIndicator');
                if (pageIndicator) {
                    pageIndicator.textContent = `Page ${state.currentPage} of ${totalPages}`;
                }
                
                // Enable/disable pagination buttons
                document.getElementById('firstPage').disabled = state.currentPage <= 1;
                document.getElementById('prevPage').disabled = state.currentPage <= 1;
                document.getElementById('nextPage').disabled = state.currentPage >= totalPages;
                document.getElementById('lastPage').disabled = state.currentPage >= totalPages;
            }
            
            // Change number of items per page
            function changePageSize() {
                const newPageSize = parseInt(this.value);
                if (!isNaN(newPageSize) && newPageSize > 0) {
                    state.rowsPerPage = newPageSize;
                    state.currentPage = 1;
                    saveFilters();
                    displayCurrentPage();
                    updatePaginationUI();
                }
            }
            
            // Display current page of data
            function displayCurrentPage() {
                const startIndex = (state.currentPage - 1) * state.rowsPerPage;
                const endIndex = Math.min(startIndex + state.rowsPerPage, state.filteredRows.length);
                
                // Hide all rows first
                const allRows = document.querySelectorAll('#attendees-tab table tbody tr:not(.no-attendees-row)');
                allRows.forEach(row => row.style.display = 'none');
                
                // Show only rows for current page
                for (let i = startIndex; i < endIndex; i++) {
                    if (state.filteredRows[i]) {
                        state.filteredRows[i].style.display = '';
                    }
                }
            }
            
            // Navigate to specific page
            function goToPage(pageNum) {
                const totalPages = Math.max(1, Math.ceil(state.filteredRows.length / state.rowsPerPage));
                pageNum = Math.max(1, Math.min(pageNum, totalPages));
                
                if (pageNum !== state.currentPage) {
                    state.currentPage = pageNum;
                    displayCurrentPage();
                    updatePaginationUI();
                }
            }
        });
        
        // Expose functions to global scope for button onclick handlers
        function filterAttendees() {
            // This function is exposed globally for the button handlers
            // The actual implementation is in the DOMContentLoaded event handler
            // This just triggers the internal function
            const event = new Event('filterAttendees');
            document.dispatchEvent(event);
        }
        
        function resetFilters() {
            // This function is exposed globally for the button handlers
            const event = new Event('resetFilters');
            document.dispatchEvent(event);
        }
        
        // Export functions
        function exportToCsv() {
            // Get visible attendees
            const attendees = [];
            const rows = document.querySelectorAll('#attendees-tab table tbody tr:not(.no-attendees-row):not([style*="display: none"])');
            
            // CSV header
            let csvContent = "Name,Email,Ticket Type,Purchase Date,Price,Referred By\n";
            
            // Add each row to CSV
            rows.forEach(row => {
                const name = row.querySelector('td[data-label="Attendee"]').textContent.trim().replace(/\s+/g, ' ');
                const email = row.querySelector('td[data-label="Email"]').textContent.trim();
                const ticketType = row.querySelector('td[data-label="Ticket Type"] span').textContent.trim();
                const purchaseDate = row.querySelector('td[data-label="Purchase Date"]').textContent.trim();
                const price = row.querySelector('td[data-label="Price"]').textContent.trim();
                const referredBy = row.querySelector('td[data-label="Referred By"]').textContent.trim();
                
                // Escape CSV values
                const escapeCsv = (value) => {
                    if (value.includes(',') || value.includes('"') || value.includes('\n')) {
                        return `"${value.replace(/"/g, '""')}"`;
                    }
                    return value;
                };
                
                csvContent += `${escapeCsv(name)},${escapeCsv(email)},${escapeCsv(ticketType)},${escapeCsv(purchaseDate)},${escapeCsv(price)},${escapeCsv(referredBy)}\n`;
            });
            
            // Create download link
            const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
            const url = URL.createObjectURL(blob);
            const link = document.createElement('a');
            link.setAttribute('href', url);
            link.setAttribute('download', 'event_attendees.csv');
            link.style.visibility = 'hidden';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }
        
        function exportToPdf() {
            // Alert user that PDF is being generated
            alert('Generating PDF. This may take a moment...');
            
            // In a production environment, you would implement PDF generation
            // This would typically involve either:
            // 1. Calling a server-side endpoint that generates the PDF
            // 2. Using a client-side library like jsPDF
            
            // For this example, we'll use a placeholder
            setTimeout(() => {
                alert('PDF export functionality would be implemented in production.');
            }, 1000);
        }
        
        function printAttendeeList() {
            // Open print dialog
            window.print();
        }
        
        function printTicket(ticketId) {
            // In production, this would redirect to a printable ticket view
            alert(`Printing ticket ${ticketId}...`);
            // window.open(`/tickets/${ticketId}/print`, '_blank');
        }
    </script>
    <%- include('../partials/customizer') %>
    <%- include('../partials/footer-scripts') %>
</body>
</html>